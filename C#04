using static System.Runtime.InteropServices.JavaScript.JSType;
using System.ComponentModel;
using System.Diagnostics.Metrics;
using static System.Collections.Specialized.BitVector32;
using System.Drawing;
using System.Numerics;
using System.Globalization;
using System.Buffers.Text;
using System.Collections.Generic;
using static System.Formats.Asn1.AsnWriter;
using System.Xml.Linq;
using System;

namespace Assignment1
{

    internal class Program
    {
        #region p1
        // 1- Explain the difference between passing(Value type parameters)
        //by value and by reference then write a suitable c# example.

        //public static void Swap(int x, int y)
        //{
        //    int temp = x;
        //    x = y;
        //    y = temp;
        //}-> there no change bec this fun take acopy from number 
        //public static void Swap(ref int x, ref int y)
        //{
        //    int temp = x;
        //    x = y;
        //    y = temp;
        //} ->swap done bec it has actual number by taking ref 
        #endregion

        #region p2
        //2- Explain the difference between passing(Reference type
        //parameters) by value and by reference then write a suitable c#
        //example.
        //public static int SumArray(ref int[] arr)
        //{
        //    int sum = 0;
        //    arr[0] = 100;
        //    foreach(int i in arr)
        //    {
        //        sum += i;
        //    }
        //    return sum;
        //}->Create 4byte in stack and point to array
        //public static int SumArray(ref int[] arr)
        //{
        //    int sum = 0;
        //    arr = new int[] { 10, 20, 30, 40 };
        //    foreach (int i in arr)
        //    {
        //        sum += i;
        //    }->not create 4 byte this access same memory in heap by 2 name
        //    return sum;
        //} 
        #endregion


        #region p3
        //3- Write a c# Function that accept 4 parameters from user and
        //return result of summation and subtracting of two numbers
        static int[] SumSubtract(int x, int y, int x2, int y2)
        {
            int[] ans = new int[2];
            ans[0] = x + y;
            ans[1] = x2 - y2;
            return ans;
        }
        #endregion

        #region p4
        //4- Write a program in C# Sharp to create a function to calculate the sum of the
        //individual digits of a given number.
       static int SumOfDigits(string s)
        {
            int ans = 0;
            foreach (var item in s)
            {
                ans += item - '0';
            }
            return ans;
        }
        #endregion

        #region p5
        //5- Create a function named "IsPrime", which receives an integer number
        //and retuns true if it is prime, or false if it is not:
       static bool isPrime(int num)
        {
            if (num < 2)
            {
                return false;
            }
            int a = (int)Math.Sqrt(num);
            for (int i = 2; i <= a + 1; i++)
                if (num % i == 0 && i != num) return false;
            return true;
        }
        #endregion

        #region p6
        //6- Create a function named MinMaxArray, to return the minimum and
        //maximum values stored in an array, using reference parameters
        public static void SumSub(int[] arr, ref int mn, ref int mx)//mn,mx must have vlaue in main
        {
            mn = (int)1e9;
            mx = (int)-1e9;
            foreach (var item in arr)
            {
                mn = Math.Min(mn, item);
                mx = Math.Max(mx, item);

            }
        } 
        #endregion

        #region p7
        //        7- Create function to calculate the factorial of the number specified as
        //parameter
        static int Factorial(int n)
        {
            int ans = 1;
            for (int i = 1; i <= n; i++) ans *= i;
            return ans;
        }
        #endregion

        #region p8
//        8- Create a function named "ChangeChar" to modify a letter in a certain
//position(0 based) of a string, replacing it with a different letter
        static void ChangeChar(ref string s, int inx, char letter)
        {
            if (inx < s.Length)
            {
                char[] chars = s.ToCharArray();
                chars[inx] = letter;
                s = new string(chars);
            }

        } 
        #endregion


        static void Main(string[] args)
        {
            #region p9
            //9 - .Write a program that prints an identity matrix using for loop, in
            //other words takes a value n from the user and shows the identity table
            //of size n * n.
            //int n = int.Parse(Console.ReadLine());
            //for (int i = 0; i < n; i++)
            //{
            //    for (int j = 0; j < n; j++)
            //    {
            //        Console.Write(i == j ? 1 : 0);
            //    }
            //    Console.WriteLine();
            //}
            #endregion

            #region p10
            //10 - Write a program in C# Sharp to find the sum of all elements of the
            //array.
            //int n = int.Parse(Console.ReadLine());
            //int[] arr = new int[n];
            //for (int i = 0; i < n; i++)
            //{
            //    arr[i] = int.Parse(Console.ReadLine());
            //}
            //long sum = 0;
            //for (int i = 0; i < n; i++)
            //{
            //    sum += arr[i];
            //}
            //Console.WriteLine(sum);
            #endregion

            #region p11
            //11 - -Write a program in C# Sharp to merge two arrays of the same size
            //sorted in ascending order.
            //int[] arr = { 3, 2, 6, 1, 5 };
            //int[] arr2 = { 8, 3, 9, 5, 6 };
            //Array.Sort(arr); Array.Sort(arr2);
            //int[] arr3 = new int[arr.Length + arr2.Length];
            //int i = 0, j = 0;
            //while (i < arr.Length && j < arr2.Length)
            //{
            //    if (arr[i] < arr2[j])
            //    {
            //        arr3[i + j] = arr[i];
            //        i++;
            //    }
            //    else
            //    {
            //        arr3[i + j] = arr2[j];
            //        j++;
            //    }
            //}
            //while (i < arr.Length)
            //{
            //    arr3[i + j] = arr[i];
            //    i++;
            //}
            //while (j < arr2.Length)
            //{
            //    arr3[i + j] = arr2[j];
            //    j++;
            //}
            //foreach (var item in arr3) Console.Write(item + " ");
            #endregion

            #region p12
            //12 - Write a program in C# Sharp to find maximum and minimum element in an
            //array
            //int[] arr = { 3, 2, 6, 1, 5 ,7};
            //int mx = 0, mn = (int)1e9;
            //for (int i = 0; i < arr.Length; i++) { 
            //    mx=Math.Max(mx, arr[i]);
            //    mn=Math.Min(mn, arr[i]);    
            //}
            //Console.WriteLine($"max={mx} ,min={mn}"); 
            #endregion

            #region p13
            //13 - Write a program in C# Sharp to find the second largest element in an
            //array.
            //int[] arr = { 3, 2, 6, 1, 5, 7 };
            //Array.Sort(arr);
            //Console.WriteLine(arr[arr.Length - 2]); 
            #endregion

            #region p14
            //14 - Consider an Array of Integer values with size N, having values as
            //in this Example
            //int n = int.Parse(Console.ReadLine());
            //int[] arr = new int[n];
            //for (int i = 0; i < n; i++)
            //{
            //    arr[i] = int.Parse(Console.ReadLine());
            //}
            //int ans = 0;
            //for (int i = 0; i < n; i++)
            //{
            //    for (int j = i+1; j < n; j++)
            //    {
            //        if (arr[i] == arr[j])ans=Math.Max(ans, j-i-1);
            //    }

            //}
            //Console.WriteLine(ans); 
            #endregion

            #region p15
            //Given a list of space separated words, reverse the order of the words.
            //string s = Console.ReadLine();
            //string[] ans = s.Split(" ");
            //Array.Reverse(ans);
            //foreach (var item in ans)
            //{
            //    Console.Write(item + " ");
            //} 
            #endregion

            #region p16
            //16 - Write a program to create two multidimensional arrays of same size.
            //Accept values from the user and store them in first array. Now copy all
            //the elements of the first array on second array and print second array.
            //int n = int.Parse(Console.ReadLine());
            //int m = int.Parse(Console.ReadLine());
            //int[,] arr = new int[n, m];
            //int[,] arr2 = new int[n, m];
            //for (int i = 0; i < n; i++)
            //{
            //    for (int j = 0; j < m; j++)
            //    {
            //        arr[i, j] = int.Parse(Console.ReadLine());
            //        arr2[i, j] = arr[i, j];
            //    }
            //}
            //for (int i = 0; i < n; i++)
            //{
            //    for (int j = 0; j < m; j++)
            //    {
            //        Console.Write(arr2[i, j] + " ");
            //    }
            //    Console.WriteLine();
            //} 
            #endregion

            #region p17
           // 17 - Write a Program to Print One Dimensional Array in Reverse Order

            //int n = int.Parse(Console.ReadLine());
            //int[] arr = new int[n];
            //for (int j = 0; j < n; j++)
            //{
            //    arr[j] = int.Parse(Console.ReadLine());

            //}
            //for (int j = 0; j < n; j++)
            //{
            //    Console.Write(arr[n - j - 1] + " ");

            //} 
            #endregion



        }
    }
}
